// ===============================
// üîç FlexSearch Frontend Script
// ===============================

// L·∫•y c√°c ph·∫ßn t·ª≠ giao di·ªán
const qEl = document.getElementById('q');
const resultsEl = document.getElementById('results');
const statsEl = document.getElementById('stats');

// G√µ realtime (debounce 250ms)
let timeout = null;
qEl.addEventListener('input', () => {
  clearTimeout(timeout);
  timeout = setTimeout(() => doSearch(qEl.value.trim()), 250);
});

// ===============================
// üöÄ H√†m t√¨m ki·∫øm ch√≠nh
// ===============================
async function doSearch(q) {
  if (!q) {
    resultsEl.innerHTML = '';
    statsEl.innerHTML = '';
    return;
  }

  try {
    const res = await fetch(`/search?q=${encodeURIComponent(q)}`);
    const data = await res.json();

    // Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng k·∫øt qu·∫£
    statsEl.innerHTML = `<p><b>${data.total}</b> k·∫øt qu·∫£ cho "<i>${escapeHtml(q)}</i>"</p>`;

    renderResults(data.results, q);
  } catch (err) {
    resultsEl.innerHTML = `<div class="result">‚ö†Ô∏è L·ªói khi g·ªçi API</div>`;
    console.error(err);
  }
}

// ===============================
// üß© Hi·ªÉn th·ªã k·∫øt qu·∫£
// ===============================
function renderResults(results, query) {
  if (!results || results.length === 0) {
    resultsEl.innerHTML = '<div class="result">Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</div>';
    return;
  }

  resultsEl.innerHTML = results.map(r => `
    <div class="result">
      <div class="title">${highlight(r.title, query)}</div>
      <small>ID: ${r.id}</small>
      <div class="snippet">${highlight(escapeHtml(r.content.substring(0, 200)), query)}...</div>
      <div style="margin-top:8px;">
        <button onclick="editDoc(${r.id})">‚úèÔ∏è S·ª≠a</button>
        <button onclick="deleteDoc(${r.id})">üóëÔ∏è X√≥a</button>
      </div>
    </div>
  `).join('');
}

// ===============================
// üí° Highlight t·ª´ kh√≥a
// ===============================
function highlight(text, query) {
  if (!query) return escapeHtml(text);
  const regex = new RegExp(`(${escapeRegex(query)})`, 'gi');
  return escapeHtml(text).replace(regex, '<mark>$1</mark>');
}

function escapeRegex(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
}

// ===============================
// üîí Escape HTML
// ===============================
function escapeHtml(s) {
  return (s || '')
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

// ===============================
// ‚ûï Th√™m t√†i li·ªáu m·ªõi
// ===============================
async function addDoc() {
  const id = document.getElementById('id').value;
  const title = document.getElementById('title').value;
  const content = document.getElementById('content').value;

  if (!id || !title || !content) {
    alert('‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!');
    return;
  }

  try {
    const res = await fetch('/api/add', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id, title, content })
    });
    const data = await res.json();
    alert(data.message || data.error);
    clearForm();
    doSearch(qEl.value.trim());
  } catch (err) {
    console.error(err);
    alert('L·ªói khi th√™m t√†i li·ªáu');
  }
}

// ===============================
// ‚úèÔ∏è S·ª≠a t√†i li·ªáu
// ===============================
async function editDoc(id) {
  const newTitle = prompt('Nh·∫≠p ti√™u ƒë·ªÅ m·ªõi:');
  const newContent = prompt('Nh·∫≠p n·ªôi dung m·ªõi:');
  if (!newTitle || !newContent) return;

  try {
    const res = await fetch(`/api/update/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ title: newTitle, content: newContent })
    });
    const data = await res.json();
    alert(data.message || data.error);
    doSearch(qEl.value.trim());
  } catch (err) {
    console.error(err);
    alert('L·ªói khi s·ª≠a t√†i li·ªáu');
  }
}

// ===============================
// üóëÔ∏è X√≥a t√†i li·ªáu
// ===============================
async function deleteDoc(id) {
  if (!confirm('X√≥a t√†i li·ªáu n√†y?')) return;

  try {
    const res = await fetch(`/api/remove/${id}`, { method: 'DELETE' });
    const data = await res.json();
    alert(data.message || data.error);
    doSearch(qEl.value.trim());
  } catch (err) {
    console.error(err);
    alert('L·ªói khi x√≥a t√†i li·ªáu');
  }
}

// ===============================
// üßπ D·ªçn form th√™m m·ªõi
// ===============================
function clearForm() {
  document.getElementById('id').value = '';
  document.getElementById('title').value = '';
  document.getElementById('content').value = '';
}

